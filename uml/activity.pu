@startuml アクティビティ図
!theme plain

title GameBargain アプリケーションフロー

start

split
  :通知リクエスト;
  partition "Discord Bot" {
    :discord_bot/bot.py でコマンドを処理;
    :discord_bot/commands.py でコマンドを実行;
    :サービスを呼び出し (例: price_service.py);
    :services/notification_service.py で通知を送信;
  }
split again
  :ユーザーが検索リクエストを送信 (Web または Discord);
  partition "Webインターフェース" {
    :web/routes.py でリクエストを処理;
    if (認証が必要か？) then (はい)
      :web/auth.py で認証処理;
    else (いいえ)
    endif
    if (フォームデータがあるか？) then (はい)
      :web/forms.py でフォームを処理;
    else (いいえ)
    endif
    :サービスを呼び出し (例: game_service.py);
  }
split end

partition "ビジネスロジックとデータアクセス" {
  :services/game_service.py または price_service.py でロジックを実行;
  :models/user.py, game.py, price.py を介してデータにアクセス;
  :data/gamebargain.db と対話;
}

partition "レスポンス生成" {
  if (Webリクエストか？) then (はい)
    :templates/ を使用してHTMLをレンダリング;
    :ユーザーにWebページを返す;
  else (いいえ)
    :Discord Botがメッセージを送信;
    :ユーザーにDiscordメッセージを返す;
  endif
}

end
@enduml